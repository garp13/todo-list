{"version":3,"sources":["components/Todo.js","components/TodoForm.js","constants/ActionTypes.js","components/TodoCard.js","components/MessageTodo.js","containers/Todos.jsx","App.js","reportWebVitals.js","reducers/todoLists.js","reducers/index.js","index.js"],"names":["Todo","props","todo","deleteTodo","className","span","content","priority","onClick","TodoForm","value","setCheck","handleValueChange","handleOnSubmit","console","log","onSubmit","type","onChange","name","id","checked","htmlFor","offset","ADD_JOB","DELETE_JOB","TodoCard","TodoRows","MessageTodo","mess","Todos","dispatch","useDispatch","todoLists","useSelector","state","useState","display","setMess","setValue","ActionTypes","job","e","preventDefault","target","pri","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","JSON","parse","localStorage","getItem","initialState","action","newLists","index","Math","random","push","setItem","stringify","findIndex","list","splice","appReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8910272d.chunk.js","sourcesContent":["import { Col, Row } from \"antd\";\r\n\r\nimport \"../assets/styles/Todos.scss\";\r\n\r\nconst Todo = (props) => {\r\n    const { todo, deleteTodo } = props;\r\n    return(\r\n        <Row className=\"todoItem\">\r\n            <Col span={15}>\r\n                {todo.content}\r\n            </Col>\r\n            <Col span={5} className={todo.priority === \"Công việc thường\" ? \"todoNormal\" : \"todoHigh\"}>\r\n            \r\n                <i className=\"fa fa-heart\"/>{todo.priority} \r\n                \r\n            </Col>\r\n            <Col span={4} className=\"toolbar\">\r\n                    <span className=\"fa fa-times-circle cursorIcon\" onClick={() => deleteTodo(todo)}>\r\n                    </span>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Todo;","import { Col, Row } from \"antd\";\r\nimport \"../assets/styles/Todos.scss\";\r\n\r\nconst TodoForm = (props) => {\r\n    const {value, setCheck, handleValueChange, handleOnSubmit} = props;\r\n    console.log(value);\r\n    return(\r\n        <div className=\"todoForm\">\r\n            <form onSubmit={handleOnSubmit}>\r\n                <Row>\r\n                    <Col span={20} >\r\n                        <input type=\"text\" value={value.content} onChange={handleValueChange} />\r\n                    </Col>\r\n\r\n                    <Col span={4}>\r\n                        <button \r\n                            type=\"primary\"\r\n                            onSubmit={handleOnSubmit}\r\n                            className=\"buttonSubmit\"\r\n                        >\r\n                            Thêm việc\r\n                        </button>\r\n                    </Col>\r\n                    \r\n\r\n                </Row>\r\n                <Row className=\"radioCheck\">\r\n\r\n                    <Col span={5} className=\"normalRadio\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            name=\"priority\" \r\n                            id=\"rNormal\" \r\n                            value=\"Công việc thường\" \r\n                            checked={value.priority === \"Công việc thường\" ? true : false}\r\n                            onChange={() => setCheck(\"Công việc thường\")}\r\n                        />\r\n                        <label htmlFor=\"rNormal\"> Công việc thường </label>\r\n                    </Col>\r\n                    <Col span={5} offset={1} className=\"highRadio\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            name=\"priority\" \r\n                            id=\"rHigh\" \r\n                            value=\"Công việc ưu tiên\" \r\n                            checked={value.priority === \"Công việc ưu tiên\" ? true : false}\r\n                            onChange={() => setCheck(\"Công việc ưu tiên\")}\r\n                            \r\n                        />\r\n                        <label htmlFor=\"rHigh\"> Công việc ưu tiên</label>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default TodoForm;","export const ADD_JOB = \"ADD_JOB\";\r\nexport const DELETE_JOB = \"DELETE_JOB\";","// import { Col, Row } from \"antd\";\r\nimport \"../assets/styles/Todos.scss\";\r\n\r\n\r\nconst TodoCard = (props) => {\r\n    const { TodoRows } = props;\r\n    return(\r\n        <div>\r\n            <div className=\"headLists\">\r\n                DANH SÁCH CÔNG VIỆC\r\n            </div>\r\n            {TodoRows}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TodoCard;","\r\n\r\n\r\nconst MessageTodo = (props) => {\r\n    const { mess } = props;\r\n    return(\r\n        <h1 className=\"messNoti\">{mess}</h1>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageTodo;","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Todo from '../components/Todo';\r\nimport TodoForm from '../components/TodoForm';\r\nimport * as ActionTypes from \"../constants/ActionTypes\";\r\nimport \"../assets/styles/Todos.scss\";\r\nimport TodoCard from '../components/TodoCard';\r\nimport MessageTodo from '../components/MessageTodo';\r\nTodos.propTypes = {\r\n    // todoLists: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\n\r\nfunction Todos(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const todoLists = useSelector(state => state.todoLists);\r\n    const [mess, setMess] = useState({\r\n        display: false,\r\n        content: \"\",\r\n    });\r\n\r\n    const [value, setValue] = useState({\r\n        content: \"\",\r\n        priority: \"Công việc thường\",\r\n    });\r\n\r\n    const handleValueChange = (e) => {\r\n        if (e.target.value === \"\") return;\r\n        setValue({\r\n            ...value,\r\n           content: e.target.value\r\n        });\r\n        console.log(e);\r\n    }\r\n\r\n    // Check priority\r\n    const setCheck = (pri) => {\r\n        setValue({\r\n            ...value,\r\n           priority: pri,\r\n        });\r\n        console.log(pri);\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: ActionTypes.ADD_JOB,\r\n            job: value,\r\n        })\r\n\r\n        if (value.content === \"\") {\r\n            setMess({\r\n                display:true,\r\n                content:\"Thêm công việc không thành công, vui lòng kiểm tra lại\"\r\n            })\r\n        }else{\r\n            \r\n            setMess({\r\n                display:true,\r\n                content:\"Thêm công việc thành công\"\r\n            })\r\n            \r\n        }\r\n\r\n\r\n        setValue({\r\n            ...value,\r\n            content: \"\",\r\n        });\r\n        \r\n       \r\n        \r\n    }\r\n\r\n    const deleteTodo = (todo) =>{\r\n        dispatch({\r\n            type: ActionTypes.DELETE_JOB,\r\n            job: todo,\r\n        })\r\n\r\n        setMess({\r\n            display:true,\r\n            content:\"Xóa công việc thành công\"\r\n        })\r\n    }\r\n\r\n    const TodoRows = (todoLists) => {\r\n        return (todoLists.map((todo) => {\r\n            return(\r\n                <Todo\r\n                    key = { todo.id }\r\n                    todo = { todo }\r\n                    deleteTodo = { deleteTodo }\r\n                />\r\n            )\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"homePage\">\r\n            { mess.display && <MessageTodo mess={mess.content}/> }\r\n            <div className=\"todoRow\">\r\n\r\n                <TodoForm \r\n                    value={value}\r\n                    handleOnSubmit={handleOnSubmit}\r\n                    handleValueChange={handleValueChange}\r\n                    setCheck={setCheck}\r\n                />\r\n                \r\n\r\n\r\n                <TodoCard \r\n                    TodoRows={TodoRows(todoLists)}\r\n                />\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Todos;","\nimport { Col, Row } from 'antd';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport Todos from './containers/Todos';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Row>\n        <Col span={16} offset={4}>\n          <Todos />\n        </Col>\n      </Row>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ActionTypes from \"../constants/ActionTypes\";\r\nvar data = JSON.parse(localStorage.getItem('TODOS'));\r\nconst initialState = data ? data : [];\r\n\r\n\r\nconst todoLists = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_JOB:{\r\n            const newLists = [...state];\r\n            const index = Math.random();\r\n            if (action.job.content===\"\") return state;\r\n            newLists.push({\r\n                id: index,\r\n                content: action.job.content,\r\n                priority: action.job.priority,\r\n\r\n            });\r\n            localStorage.setItem('TODOS', JSON.stringify(newLists));\r\n            return [...newLists];\r\n        }\r\n\r\n        case ActionTypes.DELETE_JOB:{\r\n            const newLists = [...state];\r\n            const index = newLists.findIndex(list => list.id === action.job.id);\r\n            if (index===-1) return state\r\n            else{\r\n                newLists.splice(index, 1);\r\n                localStorage.setItem('TODOS', JSON.stringify(newLists));\r\n                return [...newLists];\r\n            }\r\n        }\r\n        default:\r\n            return [...state];\r\n    }\r\n}\r\n\r\nexport default todoLists;","import { combineReducers } from 'redux';\r\nimport todoLists from \"./todoLists\";\r\n\r\nconst appReducers = combineReducers({\r\n    todoLists,\r\n})\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport appReducers from './reducers';\nimport { Provider } from 'react-redux';\n\n\nconst store = createStore(\n  appReducers,\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}